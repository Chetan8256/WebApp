{"version":3,"file":"static/webpack/static/development/pages/index.js.2684388f35fed0a672fc.hot-update.js","sources":["webpack:///./pages/index.jsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../components/Layout\";\nimport {Card, Icon, Grid, Image, Segment} from \"semantic-ui-react\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport {Fetch} from \"react-request\";\nimport { Carousel } from 'react-responsive-carousel';\n//import \"react-responsive-carousel/lib/styles/carousel.min.css\";\n/*\nimport factory from '../ethereum/factory';\n*/\n\n\nclass MainIndex extends Component {\n    state = {}\n    /*\n    async componentDidMount() {\n        const campaigns = await factory.methods.getDeployedCampaigns().call();\n        console.log(campaigns);\n    }*/\n    handleOnUpdate = (e, { width }) => this.setState({ width })\n\n    render() {\n        const { width } = this.state\n        //const textAlign = width >= Responsive.onlyComputer.minWidth ? 'right' : 'left'\n        return (\n            <Layout>\n                <Fetch url=\"http://localhost:9000/activitylogs\" mode=\"cors\">\n                    {({ fetching, failed, response, data }) => {\n                    if (fetching) {\n                        return <div>Loading data...</div>;\n                    }\n\n                    if (failed) {\n                        return <div>The request did not succeed.</div>;\n                    }\n\n                    if (data) {\n                        return (\n                            //console.log(data.length)\n                            Object.keys(data).map((key)=> (\n                                    <div>Data = {JSON.stringify(data[key])}</div>\n                                )\n                            )\n                        );\n                    }\n                    return null;\n                    }}\n                </Fetch>\n            </Layout>\n        );\n    }\n}\n\nexport default MainIndex;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAKA;;;;;;;;;;;;;;;;;;AACA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AACA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAFA;AAOA;AACA;AAAA;AACA;AAIA;;;;AAtCA;AACA;AAwCA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}